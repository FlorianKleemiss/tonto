! Copyright (C) Dylan Jayatilaka, 1999
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id: run_real.foo 3384 2009-10-21 11:08:18Z dylan_ $

program run_REAL

   implicit none

   a,val,err :: REAL
   coeff :: VEC{REAL}*
   i :: INT

   ! Macro to create Tonto system object
   ! Initialise MPI parallel stuff too.
   TONTO_CREATE

   ! IO files for error messages
   stderr.create_stderr
   stderr.open_for("write")

   stdout.create_stdout

 ! val = ONE
 ! err = 0.001
 ! stdout.show("val        = ",val)
 ! stdout.show("err        = ",err)
 ! stdout.show("val(err)   = ",val,err)
 ! stdout.flush

 ! val = TEN
 ! err = 0.1
 ! stdout.show("val        = ",val)
 ! stdout.show("err        = ",err)
 ! stdout.show("val(err)   = ",val,err)
 ! stdout.flush

 ! val = TEN
 ! err = 1.0
 ! stdout.show("val        = ",val)
 ! stdout.show("err        = ",err)
 ! stdout.show("val(err)   = ",val,err)
 ! stdout.flush

   val = -TEN*2
   err =  10.0
 ! stdout.show("val        = ",val)
 ! stdout.show("err        = ",err)
   stdout.show("val(err)   = ",val,err)
   stdout.flush

   do i = 0,11
      coeff.create(i+1)
      coeff = i.hermite_polynomial_prob_coeffs
      stdout.show("i = ",i)
      stdout.put(coeff)
      coeff.destroy
   end


   stdout.text("10 random numbers:")
   stdout.flush
   do i=1,10
      a.to_random_normal
      stdout.put(a)
      stdout.flush
   end

   stdout.flush
   stdout.text("Integrate arcsin using adaptive trapezoid method")
   stdout.text("from 0->1/2")
   stdout.flush

   val = REAL:integrate_adaptive_trapezoid(REAL::arcsin,0.0d0,0.5d0,TOL(8))
   stdout.show("Answer =",val)

   stdout.flush
   stdout.text("Integrate arcsin using adaptive simpson method")
   stdout.text("from 0->1/2")
   stdout.flush

   val = REAL:integrate_adaptive_simpson(REAL::arcsin,0.0d0,0.5d0,TOL(8))
   stdout.show("Answer =",val)

end
